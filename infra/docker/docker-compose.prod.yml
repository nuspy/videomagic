name: starter-prod

networks:
  appnet:

volumes:
  db_data:
  minio_data:

services:
  db:
    image: mariadb:11
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: change-me
      MYSQL_DATABASE: app_db
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - appnet

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-change-me}
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000' # expose S3 if needed
      - '9001:9001' # console (restrict in firewall)
    volumes:
      - minio_data:/data
    networks:
      - appnet

  api:
    build:
      context: ../..
      dockerfile: apps/api/Dockerfile
    container_name: api
    environment:
      PORT: 4000
      NODE_ENV: production
      # Adjust to your web domain (CORS)
      ALLOWED_ORIGINS: https://example.com
      DATABASE_URL: mysql://root:change-me@db:3306/app_db
      # S3 / MinIO (or point to AWS S3)
      S3_ENDPOINT: http://minio:9000
      S3_REGION: us-east-1
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minio}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-change-me}
      S3_BUCKET_UPLOADS: uploads
      S3_FORCE_PATH_STYLE: 'true'
      S3_SIGNED_URL_EXPIRES: 900
      # OAuth (set in secrets)
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      OAUTH_REDIRECT_URI: https://api.example.com/auth/google/callback
      # JWT
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET:-set-strong-secret}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-set-strong-secret}
      JWT_ACCESS_EXPIRES: 15m
      JWT_REFRESH_EXPIRES: 7d
      # SMTP (your SMTP provider)
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-465}
      SMTP_SECURE: ${SMTP_SECURE:-true}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      SMTP_FROM: ${SMTP_FROM:-"Starter App <no-reply@example.com>"}
      # Payments
      PAYMENTS_DEFAULT_CURRENCY: eur
      VAT_FALLBACK_RATE: '0.22'
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-}
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID:-}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET:-}
      PAYPAL_WEBHOOK_ID: ${PAYPAL_WEBHOOK_ID:-}
      PAYPAL_ENV: ${PAYPAL_ENV:-live}
    depends_on:
      db:
        condition: service_started
      minio:
        condition: service_started
    healthcheck:
      test: ['CMD-SHELL', 'curl -sf http://localhost:4000/healthz || exit 1']
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      - appnet

  web:
    build:
      context: ../..
      dockerfile: apps/web/Dockerfile
    container_name: web
    depends_on:
      api:
        condition: service_healthy
    ports:
      - '80:80'
    networks:
      - appnet
